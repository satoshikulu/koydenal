-- =====================================================
-- K√ñYDENAL - D√úZELTƒ∞LMƒ∞≈û VERƒ∞TABANI ≈ûEMASI
-- =====================================================
-- Bu dosya mevcut hatalƒ± ≈üemayƒ± d√ºzeltir

-- =====================================================
-- ADIM 1: MEVCUT TABLOLARI TEMƒ∞ZLE (Dƒ∞KKAT!)
-- =====================================================

-- NOT: √ñnce mevcut veriyi yedekleyin!
/*
DROP TABLE IF EXISTS admin_actions CASCADE;
DROP TABLE IF EXISTS listings CASCADE;
DROP TABLE IF EXISTS user_profiles CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
*/

-- =====================================================
-- ADIM 2: DOƒûRU ≈ûEMAYI OLU≈ûTUR
-- =====================================================

-- Categories tablosu
CREATE TABLE IF NOT EXISTS categories (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name TEXT NOT NULL UNIQUE,
    description TEXT,
    icon TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- User profiles tablosu (D√úZELTƒ∞LMƒ∞≈û)
CREATE TABLE IF NOT EXISTS user_profiles (
    id UUID PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,
    email TEXT NOT NULL,
    full_name TEXT NOT NULL,
    phone VARCHAR(15), -- +90XXXXXXXXXX formatƒ± i√ßin
    location TEXT,
    role TEXT DEFAULT 'user' CHECK (role IN ('user', 'admin')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Listings tablosu (D√úZELTƒ∞LMƒ∞≈û)
CREATE TABLE IF NOT EXISTS listings (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    price DECIMAL(10,2) DEFAULT 0,
    currency TEXT DEFAULT 'TRY',
    location TEXT NOT NULL,
    category_id UUID REFERENCES categories(id),
    listing_type TEXT DEFAULT '√ºr√ºn' CHECK (listing_type IN ('√ºr√ºn', 'hizmet')),
    status TEXT DEFAULT 'pending' CHECK (status IN ('pending', 'approved', 'rejected')),
    quantity DECIMAL(10,2) DEFAULT 1,
    unit TEXT,
    contact_phone VARCHAR(15),
    contact_email TEXT,
    contact_person TEXT,
    images TEXT[] DEFAULT '{}',
    main_image TEXT,
    user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
    approved_by UUID REFERENCES auth.users(id),
    approved_at TIMESTAMP WITH TIME ZONE,
    rejection_reason TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Admin actions tablosu
CREATE TABLE IF NOT EXISTS admin_actions (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    listing_id UUID REFERENCES listings(id) ON DELETE CASCADE,
    admin_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
    action TEXT NOT NULL CHECK (action IN ('approved', 'rejected')),
    reason TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- =====================================================
-- ADIM 3: RLS POLƒ∞Tƒ∞KALARI
-- =====================================================

-- Listings tablosu i√ßin RLS
ALTER TABLE listings ENABLE ROW LEVEL SECURITY;

-- Herkes onaylanmƒ±≈ü ilanlarƒ± g√∂rebilir
DROP POLICY IF EXISTS "Anyone can view approved listings" ON listings;
CREATE POLICY "Anyone can view approved listings" ON listings
    FOR SELECT USING (status = 'approved');

-- Kullanƒ±cƒ±lar kendi ilanlarƒ±nƒ± ekleyebilir
DROP POLICY IF EXISTS "Users can insert own listings" ON listings;
CREATE POLICY "Users can insert own listings" ON listings
    FOR INSERT WITH CHECK (auth.uid() = user_id);

-- Kullanƒ±cƒ±lar kendi ilanlarƒ±nƒ± g√ºncelleyebilir
DROP POLICY IF EXISTS "Users can update own listings" ON listings;
CREATE POLICY "Users can update own listings" ON listings
    FOR UPDATE USING (auth.uid() = user_id);

-- Admin kullanƒ±cƒ±larƒ± t√ºm ilanlarƒ± y√∂netebilir
DROP POLICY IF EXISTS "Admins can manage all listings" ON listings;
CREATE POLICY "Admins can manage all listings" ON listings
    FOR ALL USING (
        EXISTS (
            SELECT 1 FROM user_profiles
            WHERE id = auth.uid() AND role = 'admin'
        )
    );

-- User profiles tablosu i√ßin RLS
ALTER TABLE user_profiles ENABLE ROW LEVEL SECURITY;

-- Kullanƒ±cƒ±lar kendi profillerini g√∂rebilir ve g√ºncelleyebilir
DROP POLICY IF EXISTS "Users can view own profile" ON user_profiles;
CREATE POLICY "Users can view own profile" ON user_profiles
    FOR SELECT USING (auth.uid() = id);

DROP POLICY IF EXISTS "Users can update own profile" ON user_profiles;
CREATE POLICY "Users can update own profile" ON user_profiles
    FOR UPDATE USING (auth.uid() = id);

-- Admin kullanƒ±cƒ±larƒ± t√ºm profilleri g√∂rebilir
DROP POLICY IF EXISTS "Admins can view all profiles" ON user_profiles;
CREATE POLICY "Admins can view all profiles" ON user_profiles
    FOR SELECT USING (
        EXISTS (
            SELECT 1 FROM user_profiles
            WHERE id = auth.uid() AND role = 'admin'
        )
    );

-- Admin actions i√ßin RLS
ALTER TABLE admin_actions ENABLE ROW LEVEL SECURITY;

-- Sadece adminler admin_actions'ƒ± g√∂rebilir
DROP POLICY IF EXISTS "Admins can view admin actions" ON admin_actions;
CREATE POLICY "Admins can view admin actions" ON admin_actions
    FOR SELECT USING (
        EXISTS (
            SELECT 1 FROM user_profiles
            WHERE id = auth.uid() AND role = 'admin'
        )
    );

-- Sadece adminler admin_actions ekleyebilir
DROP POLICY IF EXISTS "Admins can insert admin actions" ON admin_actions;
CREATE POLICY "Admins can insert admin actions" ON admin_actions
    FOR INSERT WITH CHECK (
        EXISTS (
            SELECT 1 FROM user_profiles
            WHERE id = auth.uid() AND role = 'admin'
        )
    );

-- =====================================================
-- ADIM 4: KATEGORƒ∞LERƒ∞ EKLE
-- =====================================================

INSERT INTO categories (id, name, description, icon, created_at) VALUES
('ceddf343-3ded-4f8a-b5aa-7fde58d34a67', 'Tahƒ±llar', 'Buƒüday, arpa, mƒ±sƒ±r gibi tahƒ±l √ºr√ºnleri', 'üåæ', NOW()),
('51022018-881c-4b1d-a963-bd66bae1f446', 'Sebzeler', 'Domates, biber, patlƒ±can gibi sebzeler', 'ü•ï', NOW()),
('4c8d0f30-aa66-47b1-8e36-139a4e971968', 'Meyveler', 'Elma, armut, ≈üeftali, √ºz√ºm gibi meyveler', 'üçé', NOW()),
('0a943db0-9b30-411b-9ebb-f5ba9882a7bb', 'Bakliyat', 'Mercimek, nohut, fasulye gibi bakliyat √ºr√ºnleri', 'ü´ò', NOW()),
('af2c27dc-707d-48e3-b685-d45249903dd0', 'Hayvancƒ±lƒ±k', 'B√ºy√ºkba≈ü, k√º√ß√ºkba≈ü hayvanlar ve √ºr√ºnleri', 'üêÑ', NOW()),
('c9641343-52e1-46e6-bd76-d5982293dc84', 'Ekipman', 'Trakt√∂r, pulluk, sulama sistemleri', 'üöú', NOW())
ON CONFLICT (id) DO NOTHING;

-- =====================================================
-- ADIM 5: ƒ∞NDEXLER (Performans i√ßin)
-- =====================================================

CREATE INDEX IF NOT EXISTS idx_listings_status ON listings(status);
CREATE INDEX IF NOT EXISTS idx_listings_category ON listings(category_id);
CREATE INDEX IF NOT EXISTS idx_listings_user ON listings(user_id);
CREATE INDEX IF NOT EXISTS idx_listings_location ON listings(location);
CREATE INDEX IF NOT EXISTS idx_listings_created_at ON listings(created_at);

-- =====================================================
-- ADIM 6: KONTROL VE DOƒûRULAMA
-- =====================================================

-- T√ºm kategorileri listele
SELECT 'Kategoriler:' as info, COUNT(*) as count FROM categories;

-- T√ºm ilanlarƒ± listele
SELECT 'ƒ∞lanlar:' as info, COUNT(*) as count FROM listings;

-- ƒ∞lan durumlarƒ±nƒ± kontrol et
SELECT
  status,
  COUNT(*) as count
FROM listings
GROUP BY status;

-- Admin kullanƒ±cƒ±larƒ±nƒ± kontrol et
SELECT 'Admin kullanƒ±cƒ±larƒ±:' as info, COUNT(*) as count FROM user_profiles WHERE role = 'admin';

-- ≈ûema kontrol√º
SELECT
  '≈ûema kontrol√º tamamlandƒ±!' as status,
  NOW() as completed_at;
