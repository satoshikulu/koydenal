-- ============================================
-- ENUM Tƒ∞PLERƒ∞Nƒ∞ KONTROL ET VE OLU≈ûTUR
-- ============================================

-- √ñnce mevcut enum'larƒ± listele
DO $$
DECLARE
  enum_exists BOOLEAN;
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE '========================================';
  RAISE NOTICE 'üîç MEVCUT ENUM Tƒ∞PLERƒ∞ KONTROL EDƒ∞Lƒ∞YOR';
  RAISE NOTICE '========================================';
  RAISE NOTICE '';
  
  -- listing_status kontrol√º
  SELECT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'listing_status') INTO enum_exists;
  IF enum_exists THEN
    RAISE NOTICE '‚úÖ listing_status mevcut';
  ELSE
    RAISE NOTICE '‚ùå listing_status YOK - olu≈üturulacak';
  END IF;
  
  -- user_role kontrol√º
  SELECT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'user_role') INTO enum_exists;
  IF enum_exists THEN
    RAISE NOTICE '‚úÖ user_role mevcut';
  ELSE
    RAISE NOTICE '‚ùå user_role YOK - olu≈üturulacak';
  END IF;
  
  -- user_status kontrol√º
  SELECT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'user_status') INTO enum_exists;
  IF enum_exists THEN
    RAISE NOTICE '‚úÖ user_status mevcut';
  ELSE
    RAISE NOTICE '‚ùå user_status YOK - olu≈üturulacak';
  END IF;
  
  -- listing_type kontrol√º
  SELECT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'listing_type') INTO enum_exists;
  IF enum_exists THEN
    RAISE NOTICE '‚úÖ listing_type mevcut';
  ELSE
    RAISE NOTICE '‚ùå listing_type YOK - olu≈üturulacak';
  END IF;
  
  -- contact_preference kontrol√º
  SELECT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'contact_preference') INTO enum_exists;
  IF enum_exists THEN
    RAISE NOTICE '‚úÖ contact_preference mevcut';
  ELSE
    RAISE NOTICE '‚ùå contact_preference YOK - olu≈üturulacak';
  END IF;
  
  RAISE NOTICE '';
END $$;

-- ============================================
-- 1. listing_status ENUM
-- ============================================
DO $$ 
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'listing_status') THEN
    CREATE TYPE listing_status AS ENUM ('pending', 'approved', 'rejected', 'expired', 'sold');
    RAISE NOTICE '‚úÖ listing_status enum olu≈üturuldu';
  ELSE
    RAISE NOTICE '‚ÑπÔ∏è listing_status zaten mevcut, eksik deƒüerler kontrol ediliyor...';
    
    -- expired ekle
    IF NOT EXISTS (
      SELECT 1 FROM pg_enum 
      WHERE enumlabel = 'expired' 
      AND enumtypid = (SELECT oid FROM pg_type WHERE typname = 'listing_status')
    ) THEN
      ALTER TYPE listing_status ADD VALUE 'expired';
      RAISE NOTICE '  ‚úÖ expired eklendi';
    END IF;
    
    -- sold ekle
    IF NOT EXISTS (
      SELECT 1 FROM pg_enum 
      WHERE enumlabel = 'sold' 
      AND enumtypid = (SELECT oid FROM pg_type WHERE typname = 'listing_status')
    ) THEN
      ALTER TYPE listing_status ADD VALUE 'sold';
      RAISE NOTICE '  ‚úÖ sold eklendi';
    END IF;
  END IF;
END $$;

-- ============================================
-- 2. user_role ENUM
-- ============================================
DO $$ 
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'user_role') THEN
    CREATE TYPE user_role AS ENUM ('user', 'admin', 'moderator');
    RAISE NOTICE '‚úÖ user_role enum olu≈üturuldu';
  ELSE
    RAISE NOTICE '‚ÑπÔ∏è user_role zaten mevcut, eksik deƒüerler kontrol ediliyor...';
    
    -- moderator ekle
    IF NOT EXISTS (
      SELECT 1 FROM pg_enum 
      WHERE enumlabel = 'moderator' 
      AND enumtypid = (SELECT oid FROM pg_type WHERE typname = 'user_role')
    ) THEN
      ALTER TYPE user_role ADD VALUE 'moderator';
      RAISE NOTICE '  ‚úÖ moderator eklendi';
    END IF;
  END IF;
END $$;

-- ============================================
-- 3. user_status ENUM
-- ============================================
DO $$ 
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'user_status') THEN
    CREATE TYPE user_status AS ENUM ('pending', 'approved', 'rejected', 'suspended');
    RAISE NOTICE '‚úÖ user_status enum olu≈üturuldu';
  ELSE
    RAISE NOTICE '‚ÑπÔ∏è user_status zaten mevcut, eksik deƒüerler kontrol ediliyor...';
    
    -- suspended ekle
    IF NOT EXISTS (
      SELECT 1 FROM pg_enum 
      WHERE enumlabel = 'suspended' 
      AND enumtypid = (SELECT oid FROM pg_type WHERE typname = 'user_status')
    ) THEN
      ALTER TYPE user_status ADD VALUE 'suspended';
      RAISE NOTICE '  ‚úÖ suspended eklendi';
    END IF;
  END IF;
END $$;

-- ============================================
-- 4. listing_type ENUM
-- ============================================
DO $$ 
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'listing_type') THEN
    CREATE TYPE listing_type AS ENUM ('√ºr√ºn', 'hizmet', 'makine');
    RAISE NOTICE '‚úÖ listing_type enum olu≈üturuldu';
  ELSE
    RAISE NOTICE '‚ÑπÔ∏è listing_type zaten mevcut, eksik deƒüerler kontrol ediliyor...';
    
    -- hizmet ekle
    IF NOT EXISTS (
      SELECT 1 FROM pg_enum 
      WHERE enumlabel = 'hizmet' 
      AND enumtypid = (SELECT oid FROM pg_type WHERE typname = 'listing_type')
    ) THEN
      ALTER TYPE listing_type ADD VALUE 'hizmet';
      RAISE NOTICE '  ‚úÖ hizmet eklendi';
    END IF;
    
    -- makine ekle
    IF NOT EXISTS (
      SELECT 1 FROM pg_enum 
      WHERE enumlabel = 'makine' 
      AND enumtypid = (SELECT oid FROM pg_type WHERE typname = 'listing_type')
    ) THEN
      ALTER TYPE listing_type ADD VALUE 'makine';
      RAISE NOTICE '  ‚úÖ makine eklendi';
    END IF;
  END IF;
END $$;

-- ============================================
-- 5. contact_preference ENUM
-- ============================================
DO $$ 
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'contact_preference') THEN
    CREATE TYPE contact_preference AS ENUM ('telefon', 'whatsapp', 'email');
    RAISE NOTICE '‚úÖ contact_preference enum olu≈üturuldu';
  ELSE
    RAISE NOTICE '‚ÑπÔ∏è contact_preference zaten mevcut, eksik deƒüerler kontrol ediliyor...';
    
    -- whatsapp ekle
    IF NOT EXISTS (
      SELECT 1 FROM pg_enum 
      WHERE enumlabel = 'whatsapp' 
      AND enumtypid = (SELECT oid FROM pg_type WHERE typname = 'contact_preference')
    ) THEN
      ALTER TYPE contact_preference ADD VALUE 'whatsapp';
      RAISE NOTICE '  ‚úÖ whatsapp eklendi';
    END IF;
    
    -- email ekle
    IF NOT EXISTS (
      SELECT 1 FROM pg_enum 
      WHERE enumlabel = 'email' 
      AND enumtypid = (SELECT oid FROM pg_type WHERE typname = 'contact_preference')
    ) THEN
      ALTER TYPE contact_preference ADD VALUE 'email';
      RAISE NOTICE '  ‚úÖ email eklendi';
    END IF;
  END IF;
END $$;

-- ============================================
-- SONU√á RAPORU
-- ============================================
DO $$
DECLARE
  enum_info RECORD;
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE '========================================';
  RAISE NOTICE 'üìã G√úNCEL ENUM Tƒ∞PLERƒ∞ VE DEƒûERLERƒ∞';
  RAISE NOTICE '========================================';
  
  FOR enum_info IN 
    SELECT 
      t.typname as enum_name,
      string_agg(e.enumlabel, ', ' ORDER BY e.enumsortorder) as values
    FROM pg_type t 
    JOIN pg_enum e ON t.oid = e.enumtypid  
    WHERE t.typname IN ('listing_status', 'user_role', 'user_status', 'listing_type', 'contact_preference')
    GROUP BY t.typname
    ORDER BY t.typname
  LOOP
    RAISE NOTICE '';
    RAISE NOTICE 'üìå %', enum_info.enum_name;
    RAISE NOTICE '   Deƒüerler: %', enum_info.values;
  END LOOP;
  
  RAISE NOTICE '';
  RAISE NOTICE '========================================';
  RAISE NOTICE '‚úÖ ENUM KURULUMU TAMAMLANDI';
  RAISE NOTICE '========================================';
  RAISE NOTICE '';
  RAISE NOTICE 'üöÄ ≈ûimdi supabase_safe_setup.sql √ßalƒ±≈ütƒ±rabilirsiniz!';
  RAISE NOTICE '';
END $$;
